!function(a,b){"function"==typeof define&&define.amd?define(["angular"],function(c){return a.returnExportsGlobal=b(c)}):"object"==typeof exports?module.exports=b(require("angular")):b(a.angular)}(this,function(a){return a.module("formly",[]),a.module("formly").directive("formlyCustomValidation",["formlyUtil",function(b){"use strict";return{require:"ngModel",link:function(c,d,e,f){var g=c.$eval(e.formlyCustomValidation);if(g){var h=f.hasOwnProperty("$validators");a.forEach(g,function(a,d){if(h){var e=a.isAsync?"$asyncValidators":"$validators";f[e][d]=function(d,e){return b.formlyEval(c,a,d,e)}}else f.$parsers.unshift(function(e){var g=b.formlyEval(c,a,f.$modelValue,e);return f.$setValidity(d,g),e})})}}}}]),a.module("formly").directive("formlyDynamicName",function(){"use strict";return{restrict:"A",priority:599,controller:["$scope","$element","$attrs",function(a,b,c){b.removeAttr("formly-dynamic-name"),c.$set("name",a.$eval(c.formlyDynamicName)),delete c.formlyDynamicName}]}}),function(){"use strict";function b(b,c,d,e,f){return{restrict:"AE",transclude:!0,scope:{options:"=",model:"=",formId:"=?",index:"=?",fields:"=?",form:"=?"},controller:function(b,c){function d(){var c=b.options,d=e();a.forEach(c.expressionProperties,function(e,g){"data"!==g?c[g]=f.formlyEval(b,e,d):(c.data=c.data||{},a.forEach(c.expressionProperties.data,function(a,e){c.data[e]=f.formlyEval(b,a,d)}))})}function e(c){return b.model&&(b.options.key||b.index)?(a.isDefined(c)&&(b.model[b.options.key||b.index]=c),b.model[b.options.key||b.index]):void 0}function g(){function d(){e(),c.cancel(j)}var e,g=2e3,h=5,i=0,j=c(function(){if(i++,!a.isDefined(b.options.key)&&!a.isDefined(b.index))return d();var c=b.form&&b.form[b.id];c?(b.options.formControl=c,d()):h*i>g&&(f.warn("Couldn't set the formControl after "+g+"ms",b),d())},h);e=b.$on("$destroy",d)}b.id=f.getFieldId(b.formId,b.options,b.index),a.extend(b.options,{runExpressions:d,modelOptions:{getterSetter:!0,allowInvalid:!0}}),b.options.runExpressions=d,b.value=e,d(),b.options.noFormControl||g(),b.options.model&&b.$watch("options.model",d,!0)},link:function(a,g){function h(b){g.html(b),c(g.contents())(a)}var i=0;if(i+=a.options.template?1:0,i+=a.options.type?1:0,i+=a.options.templateUrl?1:0,0===i)return void f.warn("template type '"+a.options.type+"' not supported. On element:",g);i>1&&f.throwErrorWithField("You must only provide a type, template, or templateUrl for a field",a.options);var j=a.options.template||e.getTemplate(a.options.type);if(j)h(j);else{var k=a.options.templateUrl||e.getTemplateUrl(a.options.type);k&&b.get(k,{cache:d}).then(function(a){h(a.data)},function(a){f.warn("Problem loading template for "+k,a)})}}}}a.module("formly").directive("formlyField",b),b.$inject=["$http","$compile","$templateCache","formlyConfig","formlyUtil"]}(),a.module("formly").directive("formlyForm",function(){"use strict";var b=1;return{restrict:"E",templateUrl:"directives/formly-form.html",replace:!0,transclude:!0,scope:{fields:"=",model:"=",form:"=?"},controller:["$scope","formlyUtil",function(c,d){function e(b,e){if(a.isDefined(b.watcher)){var f=b.watcher;a.isArray(f)||(f=[f]),a.forEach(f,function(f){var g;a.isDefined(f.listener)||d.throwErrorWithField("All field watchers must have a listener",b);var h=f.expression||'model["'+b.key+'" || '+e+"]";if(a.isFunction(h)){var i=h;h=function(){var a=Array.prototype.slice.call(arguments,0);return a.unshift(c.fields[e]),a.push(g),i.apply(this,a)},h.displayName="Formly Watch Expression for field for "+b.key}var j=f.listener;if(a.isFunction(j)){var k=j;j=function(){var a=Array.prototype.slice.call(arguments,0);return a.unshift(c.fields[e]),a.push(g),k.apply(this,a)},j.displayName="Formly Watch Listener for field for "+b.key}var l=f.type||"$watch";g=c[l](h,j,f.watchDeep)})}}c.formId="formly_"+b++,a.forEach(c.fields,e),c.$watch("model",function(b){a.forEach(c.fields,function(a){a.runExpressions&&a.runExpressions(b)})},!0)}]}}),a.module("formly").provider("formlyConfig",function(){"use strict";function b(c,d){"string"==typeof c?f[c]=d:a.forEach(c,function(a,c){b(c,a)})}function c(a){return f[a]}function d(b,c){"string"==typeof b?g[b]=c:a.forEach(b,function(a,b){d(b,a)})}function e(a){return g[a]}var f={},g={};a.extend(this,{getTemplateUrl:c,setTemplateUrl:b,getTemplate:e,setTemplate:d,disableWarnings:!1,$get:function(){return this}})}),a.module("formly").factory("formlyUtil",["formlyConfig",function(b){"use strict";function c(b,c){throw new Error("Formly Error: "+b+". Field definition: "+a.toJson(c))}function d(b,c,d,e){return a.isFunction(c)?c(e,d,b):b.$eval(c,{$viewValue:e,$modelValue:d})}function e(){if(!b.disableWarnings){var a=Array.prototype.slice.call(arguments);a.unshift("Formly Warning:"),console.warn.apply(console,a)}}function f(a,b,c){var d=b.type;return!d&&b.template?d="template":!d&&b.templateUrl&&(d="templateUrl"),[a,d,b.key,c].join("_")}return{throwErrorWithField:c,formlyEval:d,warn:e,getFieldId:f}}]),a.module("formly").run(["$templateCache",function(a){"use strict";a.put("directives/formly-form.html",'<ng-form class=formly name=form role=form><div formly-field ng-repeat="field in fields track by $index" ng-if=!field.hide class=formly-field options=field model="field.model || model" fields=fields form=form form-id=formId index=$index></div><div ng-transclude></div></ng-form>')}]),"formly"});
//# sourceMappingURL=formly.min.map